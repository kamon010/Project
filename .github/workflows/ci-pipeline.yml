name: CI/CD Pipeline

# ‡∏£‡∏±‡∏ô pipeline ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£ push ‡∏´‡∏£‡∏∑‡∏≠ pull request ‡πÑ‡∏õ‡∏¢‡∏±‡∏á branch 'main'
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # 2. Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      # 3. Install dependencies
      - name: Install dependencies
        run: npm install

      # 4. Run Linting (‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î)
      - name: Run Linting
        run: npm run lint

      # 5. Run Unit Tests (‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏¢‡πà‡∏≠‡∏¢‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ)
      - name: Run Unit Tests
        run: npm test -- --coverage

      # 6. Run Integration Tests (‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡πÇ‡∏°‡∏î‡∏π‡∏•)
      - name: Run Integration Tests
        run: npm run integration-test

      # 7. Run E2E Tests (‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏õ‡πÅ‡∏ö‡∏ö End-to-End)
      - name: Run E2E Tests
        run: npm run e2e

      # 8. Run Security Check (‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡πà‡∏≠‡∏á‡πÇ‡∏´‡∏ß‡πà‡∏Ç‡∏≠‡∏á dependencies)
      - name: Run Security Check
        run: npm audit

      # 9. Build Project (‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î)
      - name: Build project
        run: npm run build

      # 10. Upload code coverage (‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î)
      - name: Upload code coverage
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/*.json

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && success()

    steps:
      # 11. Checkout repository (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£ deploy)
      - name: Checkout repository
        uses: actions/checkout@v2

      # 12. Deploy to GitHub Pages (‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏õ‡∏ó‡∏µ‡πà GitHub Pages)
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build

  # 13. Notifications (‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ pipeline ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô)
  notify:
    runs-on: ubuntu-latest
    needs: [build-and-test, deploy]
    steps:
      - name: Notify Slack
        uses: rtCamp/action-slack-notify@v2      
        with:
          message: |
            üéâ Build & Deploy Completed Successfully!
            Branch: ${{ github.ref }}
            Commit: ${{ github.sha }}
            See the results: ${{ github.repository }}
